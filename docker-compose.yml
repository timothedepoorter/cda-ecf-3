services:
  mysql:
    image: mysql:8.0
    container_name: mysql-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7.2
    container_name: redis-database
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    networks:
      - app-network

  common-data:
    build:
      context: ./server/common-data-service     # chemin vers le projet Spring Boot
      dockerfile: Dockerfile
    container_name: common-data
    environment:
      PORT: ${COMMON_DATA_SERVICE_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
    ports:
      - "9000:9000"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  authentication:
    build:
      context: ./server/authentication-service     # chemin vers le projet Spring Boot
      dockerfile: Dockerfile
    container_name: authentication
    environment:
      PORT: ${AUTHENTICATION_SERVICE_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER:  ${DB_USER}
      DB_PASS: ${DB_PASS}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}
    ports:
      - "7000:7000"
    depends_on:
      - mysql
    networks:
      - app-network

  payment:
    build:
      context: ./server/payment-service     # chemin vers le projet Spring Boot
      dockerfile: Dockerfile
    container_name: payment
    environment:
      PORT: ${PAYMENT_SERVICE_PORT}
    ports:
      - "9050:9050"
    depends_on:
      - mysql
    networks:
      - app-network


  front:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: front
    depends_on:
      - common-data
      - authentication
      - payment
    ports:
      - "3000:80"
    networks:
      - app-network

volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge